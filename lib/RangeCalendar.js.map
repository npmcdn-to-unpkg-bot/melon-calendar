{"version":3,"sources":["RangeCalendar.js"],"names":["DateTime","cx","RangeCalendar","props","context","begin","end","value","state","open","date","getNormalizeValue","onLabelClick","bind","onConfirm","onCancel","onDateChange","getSyncUpdates","nextProps","disabled","customValidity","readOnly","defaultValue","vilidity","length","stringifyValue","Date","parseDate","valueBegin","valueEnd","isAfterDate","isBeforeDate","map","formatDate","setState","index","concat","isEqualDate","onChange","type","target","format","dateFormat","parse","render","lang","size","name","placeholder","others","validity","addStates","focus","build","join","part","displayName","defaultProps","propTypes","arrayOf","string","autoOk","bool","oneOfType","object"],"mappings":"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","file":"RangeCalendar.js","sourcesContent":["/**\n * @file melon/RangeCalendar\n * @author cxtom <cxtom2008@gmail.com>\n *         leon <ludafa@outlook.com>\n */\n\nimport React, {PropTypes} from 'react';\n\nimport Validity from 'melon-core/Validity';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport InputComponent from 'melon-core/InputComponent';\nimport {getNextValidity} from 'melon-core/util/syncPropsToState';\n\nimport Icon from 'melon/Icon';\nimport Confirm from 'melon/Confirm';\n\nimport Calendar from './Calendar';\nimport Panel from './calendar/Panel';\nimport * as DateTime from './util';\n\nconst cx = create('RangeCalendar');\n\nexport default class RangeCalendar extends InputComponent {\n\n    constructor(props, context) {\n\n        super(props, context);\n\n        const {begin, end} = props;\n\n        const value = this.state.value;\n\n        this.state = {\n            ...this.state,\n            open: false,\n            date: this.getNormalizeValue(value, begin, end)\n        };\n\n        this.onLabelClick = this.onLabelClick.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onLabelClick = this.onLabelClick.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n\n    }\n\n    getSyncUpdates(nextProps) {\n\n        const {\n            disabled,\n            customValidity,\n            readOnly,\n            value = nextProps.defaultValue,\n            begin,\n            end\n        } = nextProps;\n\n        // 如果有值，那么就试着解析一下；否则设置为 null\n        let date = value ? this.getNormalizeValue(value, begin, end) : null;\n\n        const vilidity = getNextValidity(this, {value, disabled, customValidity});\n\n        return {\n            date,\n            vilidity,\n            value: (disabled || readOnly || !value.length) ? value : this.stringifyValue(date)\n        };\n\n    }\n\n    getNormalizeValue(value, begin, end) {\n\n        if (value.length === 0) {\n            return [new Date(), new Date()];\n        }\n\n        begin = this.parseDate(begin);\n        end = this.parseDate(end);\n\n        let valueBegin = this.parseDate(value[0]);\n        let valueEnd = this.parseDate(value[1]);\n\n        // 这里我们需要一个全新的 value\n        value = [\n            begin && DateTime.isAfterDate(begin, valueBegin) ? begin : valueBegin,\n            end && DateTime.isBeforeDate(end, valueEnd) ? end : valueEnd\n        ];\n\n        return value;\n\n    }\n\n    stringifyValue(date) {\n        return date.map(date => this.formatDate(date));\n    }\n\n    /**\n     * 点击textbox时触发\n     *\n     * @private\n     */\n    onLabelClick() {\n\n        const {\n            disabled,\n            readOnly\n        } = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        this.setState({open: true});\n\n    }\n\n    /**\n     * Calendar DialogCalendar隐藏时触发\n     *\n     * @private\n     */\n    onCancel() {\n        this.setState({\n            open: false\n        });\n    }\n\n    onDateChange(index, {value}) {\n\n        let date = [].concat(this.state.date);\n\n        date[index] = value;\n\n        this.setState({\n            date\n        });\n    }\n\n    onConfirm() {\n\n        const {date, value} = this.state;\n\n        // 不管怎么样，先把窗口关了\n        this.setState({\n            open: false\n        }, () => {\n\n            // 如果值发生了变化，那么释放一个 change 事件\n            if (\n                !DateTime.isEqualDate(date[0], this.parseDate(value[0]))\n                || !DateTime.isEqualDate(date[1], this.parseDate(value[1]))\n            ) {\n                super.onChange({\n                    type: 'change',\n                    target: this,\n                    value: date.map(this.formatDate, this)\n                });\n            }\n\n        });\n\n    }\n\n    /**\n     * 按设置格式化日期\n     *\n     * @param {Date} date 日期\n     * @return {string}\n     */\n    formatDate(date) {\n\n        return DateTime.format(\n            date,\n            this.props.dateFormat\n        );\n\n    }\n\n    parseDate(date) {\n\n        if (typeof date !== 'string') {\n            return date;\n        }\n\n        let format = this.props.dateFormat;\n\n        return DateTime.parse(date, format);\n    }\n\n    render() {\n\n        const props = this.props;\n\n        let {\n            lang,\n            disabled,\n            size,\n            name,\n            begin,\n            end,\n            placeholder,\n            ...others\n        } = props;\n\n        const {open, date, value, validity} = this.state;\n\n        begin = begin ? this.parseDate(begin) : null;\n        end = end ? this.parseDate(end) : null;\n\n        return (\n            <div\n                {...others}\n                className={cx(props).addStates({focus: open}).build()}>\n                <input\n                    name={name}\n                    ref=\"input\"\n                    type=\"hidden\"\n                    value={value.join(',')}\n                    disabled={disabled} />\n                <label onClick={this.onLabelClick}>\n                    {value.length === 0\n                        ? (\n                            <span className={cx().part('label-placeholder').build()}>\n                                {placeholder}\n                            </span>\n                        ) : `${value[0]} 至 ${value[1]}`\n                    }\n                    <Icon icon='expand-more' />\n                </label>\n                <Validity validity={validity} />\n                <Confirm\n                    open={open}\n                    variants={['calendar']}\n                    onConfirm={this.onConfirm}\n                    onCancel={this.onCancel}\n                    size={size}\n                    buttonVariants={['secondery', 'calendar']} >\n                    <div className={cx().part('row').build()}>\n                        <Panel\n                            lang={lang}\n                            date={date[0]}\n                            begin={begin}\n                            end={date[1] || new Date()}\n                            onChange={this.onDateChange.bind(this, 0)} />\n                        <Panel\n                            lang={lang}\n                            date={date[1]}\n                            begin={date[0] || new Date()}\n                            end={end}\n                            onChange={this.onDateChange.bind(this, 1)} />\n                    </div>\n                </Confirm>\n            </div>\n        );\n\n    }\n\n}\n\nRangeCalendar.displayName = 'RangeCalendar';\n\nRangeCalendar.defaultProps = {\n    ...Calendar.defaultProps,\n    defaultValue: [],\n    placeholder: '请选择'\n};\n\nRangeCalendar.propTypes = {\n    ...Calendar.propTypes,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    autoOk: PropTypes.bool,\n    dateFormat: PropTypes.string,\n    begin: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ]),\n    end: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ])\n};\n"],"sourceRoot":"/source/"}